#version 400 core

in vec4 clipSpace;
in vec2 textureCoords;

out vec4 out_Color;

uniform sampler2D reflectionTexture;
uniform sampler2D refractionTexture;
uniform sampler2D dudvMap;
uniform float moveFactor;

const float waveStrength = 0.05;

void main(void) 
{
	vec2 ndc = (clipSpace.xy/clipSpace.w)/2.0+0.5;

	vec2 reflectTexCoord = vec2(ndc.x, -ndc.y);
	vec2 refractionTexCoord = ndc;

	vec2 distortion1 = (texture(dudvMap, vec2(textureCoords.x + moveFactor, textureCoords.y)).rg * 2.0 - 1.0) * waveStrength;
	vec2 distortion2 = (texture(dudvMap, vec2(-textureCoords.x + moveFactor, textureCoords.y) + moveFactor).rg * 2.0 - 1.0) * waveStrength;

	vec2 totalDistortion = distortion1 + distortion2;

	refractionTexCoord += totalDistortion;
	refractionTexCoord = clamp(refractionTexCoord, 0.001, 0.999);
	
	reflectTexCoord += totalDistortion;
	reflectTexCoord.x = clamp(reflectTexCoord.x, 0.001, 0.999);
	reflectTexCoord.y = clamp(reflectTexCoord.y, -0.999, -0.001);

	
	vec4 reflectionColour = texture(reflectionTexture, reflectTexCoord);
	vec4 refractionColour = texture(refractionTexture, refractionTexCoord);

	out_Color = mix(reflectionColour, refractionColour, 0.5f);
	out_Color = mix(out_Color, vec4(0,0.3,0.5, 1.0), 0.2f);

}