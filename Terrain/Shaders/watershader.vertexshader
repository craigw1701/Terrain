#version 400 core

layout(location = 0) in vec2 position;

out vec4 clipSpace;
out vec2 textureCoords;
out vec3 toCameraVector;
out vec3 fromLightVector;
out float visibility;

uniform mat4 projectionMatrix;
uniform mat4 viewMatrix;
uniform mat4 modelMatrix;
uniform vec3 cameraPos;
uniform vec3 lightPos;

const float tiling = 50.0;

const float density = 0.00035;
const float gradient = 5.0;

void main(void) 
{
	vec4 worldPosition = modelMatrix * vec4(position.x, 0.0, position.y, 1.0);
	vec4 positionRelativeToCamera = viewMatrix * worldPosition;

	clipSpace = projectionMatrix * positionRelativeToCamera;
	gl_Position = clipSpace;

	textureCoords = vec2(position.x / 2.0 + 0.5, position.y / 2.0 + 0.5) * tiling;

	toCameraVector = cameraPos - worldPosition.xyz;
	fromLightVector = worldPosition.xyz - lightPos;

	float distance = length(positionRelativeToCamera.xyz);
	visibility = exp(-pow((distance*density), gradient));
	visibility = clamp(visibility, 0.0, 1.0);
}